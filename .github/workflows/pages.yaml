name: pages
on:
  push:
    branches:
      - master

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

jobs:
  build:
    if: github.repository == 'redbadger/crux'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Setup mdBook
        uses: jontze/action-mdbook@v3
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          use-linkcheck: true
          use-admonish: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build Documentation
        run: cargo doc --all --no-deps

      - name: Build book
        working-directory: docs
        run: mdbook build

      - name: Move outputs
        run: |
          set -e
          mkdir ./public
          mv ./target/doc ./public/master_api_docs
          mv ./docs/book/html/* ./public/

      - name: Upload GitHub Pages artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/

  deploy:
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
